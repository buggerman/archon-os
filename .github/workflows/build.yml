name: Build ArchonOS

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      release_tag:
        description: 'Release tag (e.g., v1.0.0)'
        required: false
        default: ''

env:
  IMAGE_NAME: archonos
  BUILD_DIR: /tmp/archonos-build

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: archlinux:latest
      options: --privileged
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Update system and install dependencies
      run: |
        # Update package databases
        pacman -Syu --noconfirm
        
        # Install build dependencies
        pacman -S --noconfirm \
          base-devel \
          arch-install-scripts \
          dosfstools \
          e2fsprogs \
          btrfs-progs \
          parted \
          squashfs-tools \
          libisoburn \
          syslinux \
          edk2-shell \
          git \
          wget \
          curl
    
    - name: Set up build environment
      run: |
        # Create build directory
        mkdir -p ${{ env.BUILD_DIR }}
        
        # Set up loop device support (ignore errors in container environments)
        modprobe loop || echo "Loop module loading failed, assuming built-in or available"
        
        # Verify loop device availability
        if [ ! -e /dev/loop0 ]; then
          echo "Creating loop device nodes"
          for i in {0..7}; do
            mknod /dev/loop$i b 7 $i 2>/dev/null || true
          done
        fi
        
        # Verify required tools
        which pacstrap || exit 1
        which mkfs.btrfs || exit 1
        which parted || exit 1
        which losetup || exit 1
        
        # Test loop device functionality
        echo "Testing loop device functionality"
        losetup --find || echo "Warning: losetup may have issues, but continuing"
        
        echo "Build environment ready"
    
    - name: Execute main build script
      run: |
        # Make build script executable
        chmod +x scripts/build.sh
        
        # Execute build with environment variables
        export BUILD_DIR="${{ env.BUILD_DIR }}"
        export IMAGE_NAME="${{ env.IMAGE_NAME }}"
        export GITHUB_RUN_NUMBER="${{ github.run_number }}"
        export GITHUB_SHA="${{ github.sha }}"
        
        # Run the build
        ./scripts/build.sh
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.IMAGE_NAME }}-${{ github.run_number }}
        path: |
          ${{ env.BUILD_DIR }}/*.iso
          ${{ env.BUILD_DIR }}/checksums.txt
        retention-days: 30
    
    - name: Create release (if tagged)
      if: github.event.inputs.release_tag != ''
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.event.inputs.release_tag }}
        name: ArchonOS ${{ github.event.inputs.release_tag }}
        body: |
          # ArchonOS ${{ github.event.inputs.release_tag }}
          
          An atomic, immutable Arch Linux distribution with KDE Plasma on Wayland.
          
          ## Build Information
          - **Build Number**: ${{ github.run_number }}
          - **Commit SHA**: ${{ github.sha }}
          - **Built on**: ${{ github.event.head_commit.timestamp }}
          - **Architecture**: x86_64
          
          ## Core Features
          - üîí **Immutable Root Filesystem**: Read-only system partition prevents corruption
          - ‚öõÔ∏è **Atomic A/B Updates**: Instant updates with automatic rollback on failure
          - üñ•Ô∏è **KDE Plasma on Wayland**: Modern desktop environment with latest display technology
          - üì¶ **Flatpak Integration**: Sandboxed GUI applications from Flathub
          - üõ†Ô∏è **LinuxBrew Ready**: CLI tools and development environments via LinuxBrew
          - üóÇÔ∏è **Btrfs Subvolumes**: Advanced filesystem features with compression
          - üöÄ **systemd-boot**: Fast, secure UEFI bootloader
          
          ## Installation
          1. **Download**: Get the ISO file below
          2. **Verify**: Check SHA256 sum against checksums.txt
          3. **Flash**: Write to USB using `dd` or similar tool
          4. **Boot**: Start from USB and follow installation prompts
          
          ## Default Credentials
          - **Username**: `archon` 
          - **Password**: `archon` (must be changed on first login)
          - **Root**: `archonos` (temporary, set during installation)
          
          ## Files
          - `archonos-*.iso`: Bootable installation image
          - `checksums.txt`: SHA256 verification checksums
          
        files: |
          ${{ env.BUILD_DIR }}/*.iso
          ${{ env.BUILD_DIR }}/checksums.txt
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}